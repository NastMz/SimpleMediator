name: Build and Publish NuGet Package

on:
  push:
    branches: [main, master]
    tags: ["v*"]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to build (optional, leave empty to use project version)"
        required: false
        type: string
      publish_to_nuget:
        description: "Publish to NuGet.org"
        required: true
        type: boolean
        default: false
      configuration:
        description: "Build configuration"
        required: true
        type: choice
        options:
          - Release
          - Debug
        default: Release

env:
  DOTNET_VERSION: "8.0.x"
  PROJECT_PATH: "Nast.SimpleMediator/Nast.SimpleMediator.csproj"
  BUILD_CONFIGURATION: ${{ github.event.inputs.configuration || 'Release' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for GitVersion

      - name: Display workflow information
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "ðŸš€ Manual workflow triggered"
          echo "Version: ${{ github.event.inputs.version || 'Using project version' }}"
          echo "Configuration: ${{ github.event.inputs.configuration }}"
          echo "Publish to NuGet: ${{ github.event.inputs.publish_to_nuget }}"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Update version (if specified)
        if: github.event.inputs.version != ''
        run: |
          sed -i 's|<Version>.*</Version>|<Version>${{ github.event.inputs.version }}</Version>|' ${{ env.PROJECT_PATH }}
          echo "Updated version to ${{ github.event.inputs.version }}"

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

      - name: Test
        run: |
          if [ -f "Tests/Nast.SimpleMediator.Tests.csproj" ]; then
            dotnet test Tests/Nast.SimpleMediator.Tests.csproj --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal
          else
            echo "No tests found, skipping test execution"
          fi

      - name: Pack
        run: dotnet pack ${{ env.PROJECT_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --output ./artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./artifacts/*.nupkg

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_nuget == 'true')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ./artifacts

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish to NuGet
        run: |
          dotnet nuget push ./artifacts/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
